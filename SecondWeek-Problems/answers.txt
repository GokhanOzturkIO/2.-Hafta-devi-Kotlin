Temel Türler & Null Güvenliği


Soru 1: val ile var arasındaki fark nedir?

Cevap: Val: Value/Immutable: İlk aldığı değer değiştirilemez olarak bilinen değişkendir.
       Var: Variable: Değişebilir değişkendir.

Çok bilinenin aksine val değişkene immutable yerine ready only denilmelidir.

Performans açısından farklarına bakacak olursak yok denecek kadar azdır.
Eğer akademik level'da bir konu ise ve salt dümdüz bir kodu konuşuyorsak (var) kullanmak daha performanslı ama çok küçük bir performans farkı bu.

Günlük hayat problemlerinde ise (val) kullanmak var'a göre daha avantajlı hale geliyor çünki; Thread işlemlerden dolayı var maliyet ve performansta düşüş yaşatıyor.
--------------------------------------------------------------------------------------
Soru 2:Bir var değişkeni val gibi davranmasını nasıl sağlayabiliriz val kelimesini kullanmadan? Bunu neden yapmak isteriz? Örnek bir senaryo verin.

Cevap: Basitçe örnek verecek olursak 

       class Person {

       val name:String = "Sena"
       var surname:String = "GEZER"
       private set 
                     {
Bu senaryoda, surname değişkeni var olarak tanımlanmış ancak set metodu private olarak ayarlanmıştır. Bu, surname değişkeninin sadece sınıf içinde değiştirilebileceği anlamına gelir ve sınıf dışından doğrudan erişim engellenir. Bu durum, değişkenin kontrol altında tutulmasını ve doğrudan erişimin engellenmesini sağlar.

-------------------------------------------------------------------------------------
Soru 3: "Değişmez" (Immutable) ve "Salt Okunur" (ReadOnly) kavramlarını açıklayın. val değişkenler neden aslında "değişmez" değil de "salt okunur" olarak açıklanmalıdır?

Cevap: Val değişkenlere genellikle immutable denildiğini duyarız ancak bu yanlıştır çünkü ımmutable derken asla değiştirilemez anlamına gelir. Val değişkenler ise değeri okunabilen yani (ReadOnly) ama değişemez anlamına gelmez, değeri okunup set edilemeyen değişkendir. 

Ama biz basitçe,val değişkeninin değerinin değişebilir olduğunu göstermek için örnek verecek olursak bir classtaki val değişkeninin get fonksiyonuna sabit bir değer değilde değişkenlerden oluşan bir işlemin sonucunu verirsek bu işlemin sonucu değişkenlerin değerine bağlı olarak değişeceği için her seferinde biz available space çağırdığımızda yani bu val değişkeni çağırdığımızda farklı sonuçlar alabiliriz. 
Dolayısıyla immutable değil ReadOnly'dir val değişkenler.
---------------------------------------------------------------------------------------

