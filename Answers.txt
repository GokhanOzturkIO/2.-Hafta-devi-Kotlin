Temel Türler & Null Güvenliği
------------------------------
1. val ile var arasındaki fark nedir?

- Val değeri değiştirilemeyen, sabit değişkendir. Var ise mutable, değerini istediğimiz kadar değiştirebildiğimiz bir değişkendir. Val read-only yani değeri okunabilir ama set edilemez.

................

2. Bir var değişkeni val gibi davranmasını nasıl sağlayabiliriz val kelimesini kullanmadan? Bunu neden yapmak isteriz? Örnek bir senaryo verin.

- Var değişkenin set fonksiyonunu private yaparak class'ın içinde birden fazla değerini değiştirmek isteriz ancak dışarıdan değiştirilmemesini sağlarız. Örneğin Car adında bir class'ımız olsun ve bunun da içinde model adında bir var değişkeni olsun. Bu model değişkenini private set yapmış olalım. Biz model değişkenini class'ın içerisinde de değerini değiştirebiliriz, bir fonksiyon oluşturup da değerini değiştirebiliriz. Ancak class dışında herhangi bir yer bu değişkene yeni değer atayamayız çünkü izin vermez. 

................

3. "Değişmez" (Immutable) ve "Salt Okunur" (ReadOnly) kavramlarını açıklayın. val değişkenler neden aslında "değişmez" değil de "salt okunur" olarak açıklanmalıdır?

- Değişmez (Immutable), değerini istediğimiz kadar değiştirebildiğimiz anlamına gelir. ReadOnly ise, değeri okunabilen ama set edilemeyen anlamına gelir. ReadOnly ve Immutable arasında ince bir fark vardır. Bu, kendisinin değişmez olduğu anlamına gelmez; sadece atanan değerin tekrar değiştirilemeyeceği anlamına gelir. 

................

4. "Tip Çıkarımı" (Type inference) kavramını açıklayın. Hangi durumlarda tip belirtmek kesin olarak gereklidir?

- Bir değişkeni oluştururken değer atamasını yaparsak, değişken tipini belirtmeye gerek yoktur. Ancak, değişkene değer ataması başlangıçta yapmacak isek tipini belirtmek gerekiyor. Örneğin:

val age = 32 -> IDE kızmaz çünkü girdiğimiz sayıdan dolayı değerin tipini bilir.

var eyeColor: String
eyeColor = "Brown"   -> IDE kızmaz çünkü değerini başlangıçta vermesek de tipinin ne olacağını belirttik. 

var skinTone
skinTone = "White"   -> IDE kızar çünkü tipi hiçbir yerde belirtilmemiş. Bunu düzeltmek için ya ilk değer ataması yapılmalı ya da tipi verilmeli.
