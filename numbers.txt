1. Kaç farklı tipte "number" sınıfı miras alan "alt sınıf" (child class) vardır? Bunların değer aralıkları neden önemlidir?
- Byte, Short, Int, Long, Float, Double olamk uzere 6 child class vardir. Deger araligi en kucuk olan byte(-128,127) en buyuk olan ise long'dur. deger araliklari bellek tuketimi aciisndan onemlidir. btyte degisken 8 bit kulanırken long 64 bitlik alan kullanır. Uygulamada eger cok buyuk degerli olan sayilari kullanmayacaksak byte gibi, short gibi daha kucuk yer kaplayan number class'lari tercih etmeliyiz.

2. Eğer bir değişkene tip belirtimi yapılmaz ve bir değer atanırsa, Kotlin tip çıkarımını nasıl yapar?
- Eger deger "" icinde atanmissa Kotlin tip cikarimini String olarak yapar.
  '' icinde ise Char
  Eger sayi atamasi yapilmissa deger byte deger araligi icnde de olsa Int tip cikarimi yapar.  Ama verilen deger Long deger araligindaysa Long set edilir.

3. Float değişken oluştururken F ve f harfleri varken, Long değişken oluştururken neden küçük l harfi yoktur?
- Cunku bazi fontlarda 1 ve l birbirine cok benzer. IDE bunu ayirt edemez.

4. Tek duyarlıklı (Single precision) ve Çift duyarlıklı (Double precision) kavramlarını açıklayın.
- Bu kavramlar kayan noktalı sayıların temsili ile ilgilidir. Tek duyarlıklı kavram Float olarak adlandırılır ve virgulden sonra  double'a gore daha az basamak vardir. Daha az hassas hesaplamalar icin kullanılabilir.
  Double Presicion kavrami ise Double tip olarak adlandiriilr. Virgulden sonra floata gore daha fazla basamaga sahiptir. Daha hassas olcumler icin bu kullanılmalıdır.

5. Double ve Float değişkenlerle çalışırken ondalık ayıracı olarak hangi işaretler kullanılır? Bu ayıraçların kullanımında nelere dikkat etmek gerekir?
- , ve . kullanilabilir. Normalde . kullanilir ama türkce duyarlikli uygulama yaziyorsak gelen datalarin , ile gelme ihtimaline gore ,'e duyarli olup olmadigini kontrol etmeliyiz.

6. Double ve Float değişkenler ondalık kısımda kaç basamağa kadar işlem yaparlar? Bu sınırın üzerinde gelen ondalık bilgileri için nasıl davranırlar? Hangi durumlar için Float ve hangi durumlar için Double kullanılmalıdır?
- Float degiskenler ondalik kisminda 6 basamaga kadar, double degiskenler ondalik kisminda 15 basamaga kadar islem yapabilirler. Bu sinirlarin uzerinde gelen degerler icin son basamaktan sonraki en buyuk sayiya yuvarlama yapar ve ondalik sinirlarina kadar yazar. Hassas olcumler icin double, daha az hassas olcumler icin float kullanilmalidir.

7. Ondalık(Decimal), Onaltılık (Hexadecimal) ve İkilik (Binary) değişkenleri Kotlin'de nasıl tanımlayabilirsiniz?
- Ondalık degiskenler icin hicbir on ek kullanmadan direkt tanimlayabiliriz. Orn:
  val decimalNumber : Int = 255
- Onaltilik degiskenler 0x veya 0X on eki ile tanimlanabilir. Orn:
  val hexadecimalNumber : Int = 0x1A3F
- Ikilik degiskenler 0b veya 0B on eki ile tanimlanabilir. Orn:
  val binaryNumber: Int = 0b1010110

8. Sekizlik (Octal) değişkenler Java'da nasıl tanımlanır? Kotlin'de Sekizlik değişken tanımlanabilir mi?
- Octal degiskenler 0 ile baslayan sayilardir. Bu javada desteklenir. int octalNumber = 0155; Bu sekilde tanımlanabilir. Ancak kotlinde sekizlik degiskenler dogrudan desteklenmez. Dolayli yoldan tanimlayabilriz. Onu da 
val octNumber = "155".toInt(8)  => Stringte tanimlayip onu da toInt ile 8'ilk yapmak istedigimizi belirtebilriz.














