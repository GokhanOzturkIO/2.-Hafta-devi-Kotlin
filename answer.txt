#Temel Türler & Null Güvenliği#
1-val ile var arasındaki fark nedir?
---val (value)→ read-only'dir
Get edilebilir fakat set edilemez
---var (variable)→ mutable'dir
Get ve set işlemi yapılabilmektedir.
*******************************************************************
2-Bir var değişkeni val gibi davranmasını nasıl sağlayabiliriz val kelimesini kullanmadan? 
Bunu neden yapmak isteriz? Örnek bir senaryo verin.
---Var değişkenin getter ve setter fonksiyonları vardır.Set özelliğini private yaparsak val gini davranmasını sağlarız.
	var name="oğuz"
	   private set
değişkenimizi farklı bir class içinde kullanacaksak ve değişmesini istemiyorsak yaparız ama tanımlandığı class değerinde değişiklik yapılabilir.
*************************************************************
3-"Değişmez" (Immutable) ve "Salt Okunur" (ReadOnly) kavramlarını açıklayın. val değişkenler neden aslında "değişmez" değil de "salt okunur" olarak açıklanmalıdır?
read-only → ilk değer atamsından sonra tekrar değer atanamaz ama değerin içeriği değişitirilebilir.→val
immutable → değişken yada nesnenin durumu asla ilk değerden farklı olamaz, değişmezdir.→const val
Val değişkenlerin get fonksiyonu vardır bundan dolayı read-onlydir.
*************************************************************
4-"Tip Çıkarımı" (Type inference) kavramını açıklayın. Hangi durumlarda tip belirtmek kesin olarak gereklidir?
Değişken tiplerini belirtmediğimizde değişkenin tipini otomatik algılamasıdır.
	1-Nullable değişkenleri tanımlarken
	2-fonksiyon ve class parametreleri tanımlarken
	3-bir fonksiyonun geri dönüş tipi belirtmemiz gerektiğinde.
*************************************************************


