Soru 1: `is` ve `!is` operatörlerinin kullanımını açıklayın.

is operatörü, bir nesnenin belirli bir türde olup olmadığını kontrol etmek için kullanılır.
Bu operatör, nesnenin belirtilen türde olup olmadığını kontrol eder ve sonuca göre bir boolean değeri döndürür.

!is operatörü, is operatörünün tersi olarak kullanılır.
Yani, bir nesnenin belirli bir türde olup olmadığını kontrol eder ve sonuca göre bir boolean değeri döndürür.

------------------------------------------------------------------------------------------------------------------------

Soru 2: "Akıllı Dönüşüm" (Smart Cast) ne demektir? Farklı kod örnekleri ile açıklayın.
Bu özelliğin sınırlamaları nelerdir?

    val value: Any = "Merhaba, Kotlin!"

    if (value is String) {
        println(value.length)
    }

    if (value !is Int) {
        println("Değişken bir Int türünde değildir.")
    }

 Kotlin dilinde bir değişkenin tipi üzerinde `compiler` tarafından otomatik olarak dönüşümün gerçekleştirilme
    işlemidir. Bu şekilde açık bir şekilde `Type Conversion` işlemini yapmadan o tipin sahip olduğu bütün özellikleri
    methodları kullanmamıza sağlar.

    Yine yukarıdaki örnekten devam edelim, `value` değişkeninin `String` olup olmadığını kontrol ettik ve
    `if` içerisinde açık bir şekilde `Type Conversion` işlemini yapmadan `String` tipine ait olan `length` özelliğini
    kullanabildim. İşte tam olarak bu duruma `Smart Cast(Akıllı Dönüşüm)` denir.

------------------------------------------------------------------------------------------------------------------------

Soru 3: Güvenli & Güvensiz" operatörler nelerdir?

    Bir nesneyi başka bir nesneye cast etmek istediğimizde iki operatör vardır. Bunlar as(unSafe) ve as?(safe)

    val x: String = y as String

    Bu işlemde eğer y String'e cast edilemezse programımız hata verip çökecektir.

    val x:String? = y as? String

    Burada ise eğer işlem gerçekleşmesse x değişkenine null değer atanır ve programda çökme meydana gelmez.